#!/usr/bin/env python3

import argparse
import io
import socket
import sys
import uuid

def clpr_port():
    with open (".clpr-port") as clpr_port:
        return int(clpr_port.read())

def wrap(input, output):
    marker = uuid.uuid4()
    output.write(f"{marker}\n")
    for line in input:
        output.write(line)
    output.write(f"{marker}\n")
    output.flush()

def unwrap(input, output):
    marker = input.readline()
    while True:
        line = input.readline()
        if line == marker:
            input.close()
            break
        output.write(line)

parser = argparse.ArgumentParser(
        """Sends forms to a clpr server and prints the response to stdout.
           If args are provided on the command line, they are wrapped in 
           parentheses. If no args are provided, forms are read from stdin.
        """)
parser.add_argument(
        "--host",
        default="localhost",
        help="Hostname of the clpr server (localhost by default).")
parser.add_argument(
        "--port",
        type=int,
        help="""Port of the clpr server.
                Reads the contents of `.clpr-port` if not specified.""")
parser.add_argument(
        "forms",
        nargs="*",
        help="Args will be wrapped in parens and sent to the clpr server.")

args = parser.parse_args()

input = sys.stdin
if args.forms:
    forms = " ".join(args.forms)
    input = io.StringIO(f"({forms})\n")

host = args.host
port = args.port or clpr_port()

try:
    with socket.create_connection((host, port)) as s:
        repl = s.makefile("rw")
        wrap(input, repl)
        unwrap(repl, sys.stdout)
except ConnectionRefusedError:
    print(f"Unable to connect to {host}:{port}, is clpr server running?")
